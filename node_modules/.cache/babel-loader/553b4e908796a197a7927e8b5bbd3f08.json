{"ast":null,"code":"import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nconst purchaseBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst fetchOrdersStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nconst fetchOrdersFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrdersFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseInit","state","action","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","reducer","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionsTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\nconst purchaseInit = (state, action) => {\r\n  return updateObject(state, { purchased: false });\r\n};\r\nconst purchaseBurgerStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n  return updateObject(state, {\r\n    loading: false,\r\n    purchased: true,\r\n    orders: state.orders.concat(newOrder),\r\n  });\r\n};\r\nconst purchaseBurgerFail = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\nconst fetchOrdersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    orders: action.orders,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return purchaseInit(state, action);\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return purchaseBurgerStart(state, action);\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      return purchaseBurgerSuccess(state, action);\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return purchaseBurgerFail(state, action);\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return fetchOrdersStart(state, action);\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return fetchOrdersSuccess(state, action);\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return fetchOrdersFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}