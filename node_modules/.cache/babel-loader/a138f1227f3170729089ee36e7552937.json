{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalia\\\\Desktop\\\\React course\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Auxiliar from \"../../hoc/Auxiliar/Auxiliar\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport axios from \"../../../src/axios-orders\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.setState({\n        loading: true\n      }); // alert(\"You continue!\");\n\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: \"Natalia Ermurachi\",\n          address: {\n            street: \"Teststreet 1\",\n            zipCode: \"46543\",\n            country: \" The Netherlands\"\n          },\n          email: \"test@test.com\"\n        },\n        deliveryMethod: \"fastest\"\n      };\n      axios.post(\"/orders.json\", order).then(response => this.setState({\n        loading: false,\n        purchasing: false\n      })).catch(error => this.setState({\n        loading: false,\n        purchasing: false\n      }));\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://react-my-burger-20142-default-rtdb.firebaseio.com/ingredients.json\").then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 22\n      }, this);\n    }\n\n    let burger = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 18\n    }, this);\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/_jsxDEV(Auxiliar, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.addIngredientHandler,\n          ingredientRemoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          purchasable: this.state.purchasable,\n          price: this.state.totalPrice,\n          ordered: this.purchaseHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Auxiliar, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withErrorHandler(BurgerBuilder, axios);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Auxiliar","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","axios","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","error","componentDidMount","get","data","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Auxiliar from \"../../hoc/Auxiliar/Auxiliar\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport axios from \"../../../src/axios-orders\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7,\r\n};\r\nclass BurgerBuilder extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {...}\r\n  // }\r\n  state = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n    purchasing: false,\r\n    loading: false,\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://react-my-burger-20142-default-rtdb.firebaseio.com/ingredients.json\"\r\n      )\r\n      .then((response) => {\r\n        this.setState({ ingredients: response.data });\r\n      });\r\n  }\r\n  updatePurchaseState(ingredients) {\r\n    const sum = Object.keys(ingredients)\r\n      .map((igKey) => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n    this.setState({ purchasable: sum > 0 });\r\n  }\r\n\r\n  addIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchaseState(updatedIngredients);\r\n  };\r\n\r\n  removeIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) {\r\n      return;\r\n    }\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceDeduction = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceDeduction;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchaseState(updatedIngredients);\r\n  };\r\n\r\n  purchaseHandler = () => {\r\n    this.setState({\r\n      purchasing: true,\r\n    });\r\n  };\r\n  purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n\r\n  purchaseContinueHandler = () => {\r\n    this.setState({ loading: true });\r\n    // alert(\"You continue!\");\r\n    const order = {\r\n      ingredients: this.state.ingredients,\r\n      price: this.state.totalPrice,\r\n      customer: {\r\n        name: \"Natalia Ermurachi\",\r\n        address: {\r\n          street: \"Teststreet 1\",\r\n          zipCode: \"46543\",\r\n          country: \" The Netherlands\",\r\n        },\r\n        email: \"test@test.com\",\r\n      },\r\n      deliveryMethod: \"fastest\",\r\n    };\r\n    axios\r\n      .post(\"/orders.json\", order)\r\n      .then((response) => this.setState({ loading: false, purchasing: false }))\r\n      .catch((error) => this.setState({ loading: false, purchasing: false }));\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients,\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    let orderSummary = null;\r\n    if (this.state.loading) {\r\n      orderSummary = <Spinner />;\r\n    }\r\n    let burger = <Spinner />;\r\n    if (this.state.ingredients) {\r\n      burger = (\r\n        <Auxiliar>\r\n          <Burger ingredients={this.state.ingredients} />\r\n          <BuildControls\r\n            ingredientAdded={this.addIngredientHandler}\r\n            ingredientRemoved={this.removeIngredientHandler}\r\n            disabled={disabledInfo}\r\n            purchasable={this.state.purchasable}\r\n            price={this.state.totalPrice}\r\n            ordered={this.purchaseHandler}\r\n          />\r\n        </Auxiliar>\r\n      );\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.state.ingredients}\r\n          price={this.state.totalPrice}\r\n          purchaseCancelled={this.purchaseCancelHandler}\r\n          purchaseContinued={this.purchaseContinueHandler}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Auxiliar>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Auxiliar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);\r\n"]},"metadata":{},"sourceType":"module"}