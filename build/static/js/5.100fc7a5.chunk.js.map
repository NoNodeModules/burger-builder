{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,gHCoCXC,EAlCD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAG9B,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GACxC,OACE,uBACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OANb,UAUGN,EAAGJ,KAVN,KAUcI,EAAGH,OAVjB,MAQOG,EAAGJ,SAMd,OACE,sBAAKW,UAAWC,IAAQC,MAAxB,UACE,8CAAiBX,KACjB,wCACS,0CAAaY,OAAOC,WAAWnB,EAAMoB,OAAOC,QAAQ,a,gCCtB7DC,E,uKACJ,WACEC,KAAKvB,MAAMwB,cAAcD,KAAKvB,MAAMyB,MAAOF,KAAKvB,MAAM0B,U,oBAGxD,WACE,IAAIC,EAAS,cAACC,EAAA,EAAD,IAUb,OATKL,KAAKvB,MAAM6B,UACdF,EAASJ,KAAKvB,MAAM2B,OAAOpB,KAAI,SAACR,GAAD,OAC7B,cAACkB,EAAD,CAEEhB,YAAaF,EAAME,YACnBmB,MAAOrB,EAAMqB,OAFRrB,EAAM+B,QAMV,8BAAMH,Q,GAhBII,aAoCNC,uBAhBS,SAACC,GACvB,MAAO,CACLN,OAAQM,EAAMlC,MAAM4B,OACpBE,QAASI,EAAMlC,MAAM8B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAII,SAACS,GAC1B,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OACbS,EAASC,IAAoBX,EAAOC,QAI3BM,CAGbK,YAAiBf,EAAQgB","file":"static/js/5.100fc7a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__e5Ft0\"};","import React from \"react\";\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n  const ingredientOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\",\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map((order) => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price}\r\n        />\r\n      ));\r\n    }\r\n    return <div>{orders}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}