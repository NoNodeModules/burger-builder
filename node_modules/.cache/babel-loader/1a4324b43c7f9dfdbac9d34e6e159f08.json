{"ast":null,"code":"import _defineProperty from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import Button from\"../../../components/UI/Button/Button\";import Spinner from\"../../../components/UI/Spinner/Spinner\";import classes from\"./ContactData.module.css\";import axios from\"../../../axios-orders\";import Input from\"../../../components/UI/Input/Input\";import withErrorHandler from\"../../../hoc/withErrorHandler/withErrorHandler\";import*as actions from\"../../../store/actions/index\";import{updateObject,checkValidity}from\"../../../shared/utility\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactData=/*#__PURE__*/function(_Component){_inherits(ContactData,_Component);var _super=_createSuper(ContactData);function ContactData(){var _this;_classCallCheck(this,ContactData);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={orderForm:{name:{elementType:\"input\",elementConfig:{type:\"text\",placeholder:\"Your Name\"},value:\"\",validation:{required:true},valid:false,touched:false},street:{elementType:\"input\",elementConfig:{type:\"text\",placeholder:\"Street\"},value:\"\",validation:{required:true},valid:false,touched:false},zipCode:{elementType:\"input\",elementConfig:{type:\"text\",placeholder:\"ZIP Code\"},value:\"\",validation:{required:true,minLength:5,maxLength:5,isNumeric:true},valid:false,touched:false},country:{elementType:\"input\",elementConfig:{type:\"text\",placeholder:\"Country\"},value:\"\",validation:{required:true},valid:false,touched:false},email:{elementType:\"input\",elementConfig:{type:\"email\",placeholder:\"Your E-Mail\"},value:\"\",validation:{required:true,isEmail:true},valid:false,touched:false},deliveryMethod:{elementType:\"select\",elementConfig:{options:[{value:\"fastest\",displayValue:\"Fastest\"},{value:\"cheapest\",displayValue:\"Cheapest\"}]},value:\"fastest\",validation:{},valid:true}},formIsValid:false};_this.orderHandler=function(event){event.preventDefault();var formData={};for(var formElementIdentifier in _this.state.orderForm){formData[formElementIdentifier]=_this.state.orderForm[formElementIdentifier].value;}var order={ingredients:_this.props.ings,price:_this.props.price,orderData:formData,userId:_this.props.userId};_this.props.onOrderBurger(order,_this.props.token);};_this.inputChangedHandler=function(event,inputIdentifier){var updatedFormElement=updateObject(_this.state.orderForm[inputIdentifier],{value:event.target.value,valid:checkValidity(event.target.value,_this.state.orderForm[inputIdentifier].validation),touched:true});var updatedOrderForm=updateObject(_this.state.orderForm,_defineProperty({},inputIdentifier,updatedFormElement));var formIsValid=true;for(var _inputIdentifier in updatedOrderForm){formIsValid=updatedOrderForm[_inputIdentifier].valid&&formIsValid;}_this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});};return _this;}_createClass(ContactData,[{key:\"render\",value:function render(){var _this2=this;var formElementsArray=[];for(var key in this.state.orderForm){formElementsArray.push({id:key,config:this.state.orderForm[key]});}var form=/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.orderHandler,children:[formElementsArray.map(function(formElement){return/*#__PURE__*/_jsx(Input,{elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);}},formElement.id);}),/*#__PURE__*/_jsx(Button,{btnType:\"Success\",disabled:!this.state.formIsValid,children:\"ORDER\"})]});if(this.props.loading){form=/*#__PURE__*/_jsx(Spinner,{});}return/*#__PURE__*/_jsxs(\"div\",{className:classes.ContactData,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Enter your Contact Data\"}),form]});}}]);return ContactData;}(Component);var mapStateToProps=function mapStateToProps(state){return{ings:state.burgerBuilder.ingredients,price:state.burgerBuilder.totalPrice,loading:state.order.loading,token:state.auth.token,userId:state.auth.userId};};var mapDispatchBurgerProps=function mapDispatchBurgerProps(dispatch){return{onOrderBurger:function onOrderBurger(orderData,token){return dispatch(actions.purchaseBurger(orderData,token));}};};export default connect(mapStateToProps,mapDispatchBurgerProps)(withErrorHandler(ContactData,axios));","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","connect","Button","Spinner","classes","axios","Input","withErrorHandler","actions","updateObject","checkValidity","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ingredients","props","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","setState","formElementsArray","key","push","id","config","form","map","formElement","loading","mapStateToProps","burgerBuilder","totalPrice","auth","mapDispatchBurgerProps","dispatch","purchaseBurger"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { updateObject, checkValidity } from \"../../../shared/utility\";\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Street\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"ZIP Code\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n          isNumeric: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      country: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Country\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your E-Mail\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayValue: \"Fastest\" },\r\n            { value: \"cheapest\", displayValue: \"Cheapest\" },\r\n          ],\r\n        },\r\n        value: \"fastest\",\r\n        validation: {},\r\n        valid: true,\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  };\r\n\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      userId: this.props.userId,\r\n    };\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedFormElement = updateObject(\r\n      this.state.orderForm[inputIdentifier],\r\n      {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.orderForm[inputIdentifier].validation\r\n        ),\r\n        touched: true,\r\n      }\r\n    );\r\n    const updatedOrderForm = updateObject(this.state.orderForm, {\r\n      [inputIdentifier]: updatedFormElement,\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key],\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map((formElement) => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchBurgerProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(actions.purchaseBurger(orderData, token)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchBurgerProps\r\n)(withErrorHandler(ContactData, axios));\r\n"]},"metadata":{},"sourceType":"module"}