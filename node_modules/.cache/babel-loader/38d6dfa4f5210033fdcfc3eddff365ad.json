{"ast":null,"code":"import*as actionTypes from\"../actions/actionsTypes\";import{updateObject}from\"../../shared/utility\";var initialState={orders:[],loading:false,purchased:false};var purchaseInit=function purchaseInit(state,action){return updateObject(state,{purchased:false});};var purchaseBurgerStart=function purchaseBurgerStart(state,action){return updateObject(state,{loading:true});};var purchaseBurgerSuccess=function purchaseBurgerSuccess(state,action){var newOrder=updateObject(action.orderData,{id:action.orderId});return updateObject(state,{loading:false,purchased:true,orders:state.orders.concat(newOrder)});};var purchaseBurgerFail=function purchaseBurgerFail(state,action){return updateObject(state,{loading:false});};var fetchOrdersStart=function fetchOrdersStart(state,action){return updateObject(state,{loading:true});};var fetchOrdersSuccess=function fetchOrdersSuccess(state,action){return updateObject(state,{orders:action.orders,loading:false});};var fetchOrdersFail=function fetchOrdersFail(state,action){return updateObject(state,{loading:false});};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.PURCHASE_INIT:return purchaseInit(state,action);case actionTypes.PURCHASE_BURGER_START:return purchaseBurgerStart(state,action);case actionTypes.PURCHASE_BURGER_SUCCESS:return purchaseBurgerSuccess(state,action);case actionTypes.PURCHASE_BURGER_FAIL:return purchaseBurgerFail(state,action);case actionTypes.FETCH_ORDERS_START:return fetchOrdersStart(state,action);case actionTypes.FETCH_ORDERS_SUCCESS:return fetchOrdersSuccess(state,action);case actionTypes.FETCH_ORDERS_FAIL:return fetchOrdersFail(state,action);default:return state;}};export default reducer;","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseInit","state","action","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","reducer","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionsTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\nconst purchaseInit = (state, action) => {\r\n  return updateObject(state, { purchased: false });\r\n};\r\nconst purchaseBurgerStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n  return updateObject(state, {\r\n    loading: false,\r\n    purchased: true,\r\n    orders: state.orders.concat(newOrder),\r\n  });\r\n};\r\nconst purchaseBurgerFail = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\nconst fetchOrdersSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    orders: action.orders,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return purchaseInit(state, action);\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return purchaseBurgerStart(state, action);\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      return purchaseBurgerSuccess(state, action);\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return purchaseBurgerFail(state, action);\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return fetchOrdersStart(state, action);\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return fetchOrdersSuccess(state, action);\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return fetchOrdersFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}