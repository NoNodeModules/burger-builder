{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalia\\\\Desktop\\\\React course\\\\burger-builder\\\\src\\\\containers\\\\Orders\\\\Orders.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Orders extends React.Component {\n  componentDidMount() {\n    this.props.onFetchOrders();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.orders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n        ingredients: order.ingredients,\n        price: order.price\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchedToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(null, mapDispatchedToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/containers/Orders/Orders.js"],"names":["React","connect","Order","axios","withErrorHandler","actions","Orders","Component","componentDidMount","props","onFetchOrders","render","state","orders","map","order","ingredients","price","id","mapDispatchedToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,aAAX;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,iBACrB,QAAC,KAAD;AAEE,QAAA,WAAW,EAAEA,KAAK,CAACC,WAFrB;AAGE,QAAA,KAAK,EAAED,KAAK,CAACE;AAHf,SACOF,KAAK,CAACG,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAhBkC;;AAmBrC,MAAMC,oBAAoB,GAAIC,QAAD,IAAc;AACzC,SAAO;AACLV,IAAAA,aAAa,EAAE,MAAMU,QAAQ,CAACf,OAAO,CAACgB,WAAR,EAAD;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAepB,OAAO,CACpB,IADoB,EAEpBkB,oBAFoB,CAAP,CAGbf,gBAAgB,CAACE,MAAD,EAASH,KAAT,CAHH,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Orders extends React.Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.orders.map((order) => (\r\n          <Order\r\n            key={order.id}\r\n            ingredients={order.ingredients}\r\n            price={order.price}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchedToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: () => dispatch(actions.fetchOrders()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchedToProps\r\n)(withErrorHandler(Orders, axios));\r\n"]},"metadata":{},"sourceType":"module"}