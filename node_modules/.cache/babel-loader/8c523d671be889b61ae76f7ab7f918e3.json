{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalia\\\\Desktop\\\\React course\\\\burger-builder\\\\src\\\\containers\\\\Orders\\\\Orders.js\";\nimport React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.onFetchOrders();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.orders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n        ingredients: order.ingredients,\n        price: order.price\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default _c = withErrorHandler(Orders, axios);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","actions","Orders","state","orders","loading","componentDidMount","props","onFetchOrders","render","map","order","ingredients","price","id","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE;AAFH,KADqB;AAAA;;AAM7BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,aAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKN,KAAL,CAAWC,MAAX,CAAkBM,GAAlB,CAAuBC,KAAD,iBACrB,QAAC,KAAD;AAEE,QAAA,WAAW,EAAEA,KAAK,CAACC,WAFrB;AAGE,QAAA,KAAK,EAAED,KAAK,CAACE;AAHf,SACOF,KAAK,CAACG,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAtB4B;;AAyB/B,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLR,IAAAA,aAAa,EAAE,MAAMQ,QAAQ,CAACf,OAAO,CAACgB,WAAR,EAAD;AADxB,GAAP;AAGD,CAJD;;AAMA,oBAAejB,gBAAgB,CAACE,MAAD,EAASH,KAAT,CAA/B","sourcesContent":["import React, { Component } from \"react\";\n\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\n\nclass Orders extends Component {\n  state = {\n    orders: [],\n    loading: true,\n  };\n\n  componentDidMount() {\n    this.props.onFetchOrders();\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.orders.map((order) => (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: () => dispatch(actions.fetchOrders()),\n  };\n};\n\nexport default withErrorHandler(Orders, axios);\n"]},"metadata":{},"sourceType":"module"}