{"ast":null,"code":"import * as actionTypes from \"../actions/actionsTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return updateObject(state, {\n        purchased: false\n      });\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      const newOrder = updateObject(action.orderData, {\n        id: action.orderId\n      });\n      return updateObject(state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n      });\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return updateObject(state, {\n        loading: false\n      });\n\n    case actionTypes.FETCH_ORDERS_START:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return { ...state,\n        orders: action.orders,\n        loading: false\n      };\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAW,CAACU,aAAjB;AACE,aAAOT,YAAY,CAACM,KAAD,EAAQ;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAR,CAAnB;;AACF,SAAKL,WAAW,CAACW,qBAAjB;AACE,aAAOV,YAAY,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAnB;;AAEF,SAAKJ,WAAW,CAACY,uBAAjB;AACE,YAAMC,QAAQ,GAAGZ,YAAY,CAACO,MAAM,CAACM,SAAR,EAAmB;AAAEC,QAAAA,EAAE,EAAEP,MAAM,CAACQ;AAAb,OAAnB,CAA7B;AACA,aAAOf,YAAY,CAACM,KAAD,EAAQ;AACzBH,QAAAA,OAAO,EAAE,KADgB;AAEzBC,QAAAA,SAAS,EAAE,IAFc;AAGzBF,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAac,MAAb,CAAoBJ,QAApB;AAHiB,OAAR,CAAnB;;AAKF,SAAKb,WAAW,CAACkB,oBAAjB;AACE,aAAOjB,YAAY,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAnB;;AAEF,SAAKJ,WAAW,CAACmB,kBAAjB;AACE,aAAO,EACL,GAAGZ,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKJ,WAAW,CAACoB,oBAAjB;AACE,aAAO,EACL,GAAGb,KADE;AAELJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAFV;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,WAAW,CAACqB,iBAAjB;AACE,aAAO,EACL,GAAGd,KADE;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AACE,aAAOG,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionsTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT:\r\n      return updateObject(state, { purchased: false });\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return updateObject(state, { loading: true });\r\n\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n      return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder),\r\n      });\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return updateObject(state, { loading: false });\r\n\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        orders: action.orders,\r\n        loading: false,\r\n      };\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}