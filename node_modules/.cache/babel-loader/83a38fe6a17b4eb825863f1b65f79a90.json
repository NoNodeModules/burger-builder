{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalia\\\\Desktop\\\\React course\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Auxiliar from \"../../hoc/Auxiliar/Auxiliar\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport axios from \"../../axios-orders\";\nimport * as actions from \"../../store/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      if (this.props.isAuthenticated) {\n        this.setState({\n          purchasing: true\n        });\n      } else {\n        this.props.onSetAuthRedirectPath(\"/checkout\");\n        this.props.history.push(\"/auth\");\n      }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push(\"/checkout\");\n    };\n  }\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  }\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.props.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients can't be loaded!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/_jsxDEV(Auxiliar, {\n        children: [/*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.props.ings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          purchasable: this.updatePurchaseState(this.props.ings),\n          ordered: this.purchaseHandler,\n          isAuth: this.props.isAuthenticated,\n          price: this.props.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n      orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.props.price,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    } // {salad: true, meat: false, ...}\n\n\n    return /*#__PURE__*/_jsxDEV(Auxiliar, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), burger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Auxiliar","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","axios","actions","BurgerBuilder","state","purchasing","purchaseHandler","props","isAuthenticated","setState","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","componentDidMount","onInitIngredients","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","orderSummary","burger","error","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","burgerBuilder","totalPrice","auth","token","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients","purchaseInit","path","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Auxiliar from \"../../hoc/Auxiliar/Auxiliar\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport axios from \"../../axios-orders\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {...}\r\n  // }\r\n  state = {\r\n    purchasing: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onInitIngredients();\r\n  }\r\n\r\n  updatePurchaseState(ingredients) {\r\n    const sum = Object.keys(ingredients)\r\n      .map((igKey) => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n    return sum > 0;\r\n  }\r\n\r\n  purchaseHandler = () => {\r\n    if (this.props.isAuthenticated) {\r\n      this.setState({ purchasing: true });\r\n    } else {\r\n      this.props.onSetAuthRedirectPath(\"/checkout\");\r\n      this.props.history.push(\"/auth\");\r\n    }\r\n  };\r\n\r\n  purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n\r\n  purchaseContinueHandler = () => {\r\n    this.props.onInitPurchase();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.props.ings,\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    let orderSummary = null;\r\n    let burger = this.props.error ? (\r\n      <p>Ingredients can't be loaded!</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n\r\n    if (this.props.ings) {\r\n      burger = (\r\n        <Auxiliar>\r\n          <Burger ingredients={this.props.ings} />\r\n          <BuildControls\r\n            ingredientAdded={this.props.onIngredientAdded}\r\n            ingredientRemoved={this.props.onIngredientRemoved}\r\n            disabled={disabledInfo}\r\n            purchasable={this.updatePurchaseState(this.props.ings)}\r\n            ordered={this.purchaseHandler}\r\n            isAuth={this.props.isAuthenticated}\r\n            price={this.props.price}\r\n          />\r\n        </Auxiliar>\r\n      );\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ings}\r\n          price={this.props.price}\r\n          purchaseCancelled={this.purchaseCancelHandler}\r\n          purchaseContinued={this.purchaseContinueHandler}\r\n        />\r\n      );\r\n    }\r\n    // {salad: true, meat: false, ...}\r\n    return (\r\n      <Auxiliar>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Auxiliar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    onIngredientRemoved: (ingName) =>\r\n      dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onSetAuthRedirectPath: (path) =>\r\n      dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n"]},"metadata":{},"sourceType":"module"}