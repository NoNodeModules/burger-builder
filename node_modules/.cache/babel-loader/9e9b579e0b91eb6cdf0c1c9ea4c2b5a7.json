{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalia\\\\Desktop\\\\React course\\\\burger-builder\\\\src\\\\hoc\\\\withErrorHandler\\\\withErrorHandler.js\";\nimport React from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Auxiliar from \"../Auxiliar/Auxiliar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(null, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    componentWillUnmount() {}\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(Auxiliar, {\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.error,\n          modalClosed: this.errorConfirmedHandler,\n          children: this.state.error ? this.state.error.message : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WrappedComponent, { ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Modal","Auxiliar","withErrorHandler","WrappedComponent","axios","Component","state","error","errorConfirmedHandler","setState","componentWillMount","reqInterceptor","interceptors","request","use","req","resInterceptor","response","componentWillUnmount","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AACpD,SAAO,cAAcL,KAAK,CAACM,SAApB,CAA8B;AAAA;AAAA;AAAA,WACnCC,KADmC,GAC3B;AACNC,QAAAA,KAAK,EAAE;AADD,OAD2B;;AAAA,WAenCC,qBAfmC,GAeX,MAAM;AAC5B,aAAKC,QAAL,CAAc;AACZF,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAnBkC;AAAA;;AAInCG,IAAAA,kBAAkB,GAAG;AACnB,WAAKC,cAAL,GAAsBP,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,GAAD,IAAS;AAC5D,aAAKN,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,eAAOQ,GAAP;AACD,OAHqB,CAAtB;AAIA,WAAKC,cAAL,GAAsBZ,KAAK,CAACQ,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CAAgC,IAAhC,EAAuCP,KAAD,IAAW;AACrE,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD,OAFqB,CAAtB;AAGD;;AAEDW,IAAAA,oBAAoB,GAAG,CAAE;;AAMzBC,IAAAA,MAAM,GAAG;AACP,0BACE,QAAC,QAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,KADnB;AAEE,UAAA,WAAW,EAAE,KAAKC,qBAFpB;AAAA,oBAIG,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBa,OAApC,GAA8C;AAJjD;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,gBAAD,OAAsB,KAAKC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;AAhCkC,GAArC;AAkCD,CAnCD;;AAqCA,eAAenB,gBAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Auxiliar from \"../Auxiliar/Auxiliar\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class extends React.Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n    componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use((req) => {\r\n        this.setState({ error: null });\r\n        return req;\r\n      });\r\n      this.resInterceptor = axios.interceptors.response.use(null, (error) => {\r\n        this.setState({ error: error });\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {}\r\n    errorConfirmedHandler = () => {\r\n      this.setState({\r\n        error: null,\r\n      });\r\n    };\r\n    render() {\r\n      return (\r\n        <Auxiliar>\r\n          <Modal\r\n            show={this.state.error}\r\n            modalClosed={this.errorConfirmedHandler}\r\n          >\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Auxiliar>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n"]},"metadata":{},"sourceType":"module"}