{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Natalia\\\\Desktop\\\\React course\\\\burger-builder\\\\src\\\\components\\\\Burger\\\\Burger.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst burger = props => {\n  console.log(props);\n  let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      console.log(igKey, i);\n      return /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n        type: igKey\n      }, igKey + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }, this);\n    }); // [v1, v2, vn] - we need the length\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []); // an array with keys\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please start adding ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 30\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Burger,\n    children: [/*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), transformedIngredients, /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(burger);","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/components/Burger/Burger.js"],"names":["React","withRouter","classes","BurgerIngredient","burger","props","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACM,WAAlB,EAC1BC,GAD0B,CACrBC,KAAD,IAAW;AACd,WAAO,CAAC,GAAGC,KAAK,CAACT,KAAK,CAACM,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACxDV,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ,EAAmBG,CAAnB;AACA,0BAAO,QAAC,gBAAD;AAAkC,QAAA,IAAI,EAAEH;AAAxC,SAAuBA,KAAK,GAAGG,CAA/B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHM,CAAP,CADc,CAIV;AACL,GAN0B,EAO1BC,MAP0B,CAOnB,CAACC,GAAD,EAAMC,EAAN,KAAa;AACnB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACD,GAT0B,EASxB,EATwB,CAA7B,CAFwB,CAWd;;AACV,MAAIX,sBAAsB,CAACa,MAAvB,KAAkC,CAAtC,EAAyC;AACvCb,IAAAA,sBAAsB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACoB,MAAxB;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGd,sBAFH,eAGE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtBD;;AAwBA,eAAeP,UAAU,CAACG,MAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst burger = (props) => {\r\n  console.log(props);\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        console.log(igKey, i);\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n      }); // [v1, v2, vn] - we need the length\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []); // an array with keys\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients</p>;\r\n  }\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(burger);\r\n"]},"metadata":{},"sourceType":"module"}