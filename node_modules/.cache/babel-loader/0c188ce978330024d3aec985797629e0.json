{"ast":null,"code":"import * as actionTypes from \"../actions/actionsTypes\";\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionTypes.SET_INGREDIENTS:\n      return { ...state,\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false\n      };\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,yBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,GADiB;AAExBC,EAAAA,MAAM,EAAE,GAFgB;AAGxBC,EAAAA,IAAI,EAAE,GAHkB;AAIxBC,EAAAA,KAAK,EAAE;AAJiB,CAA1B;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,WAAW,CAACc,cAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELT,QAAAA,WAAW,EAAE,EACX,GAAGS,KAAK,CAACT,WADE;AAEX,WAACU,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAFzD,SAFR;AAMLZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AAN3C,OAAP;;AAQF,SAAKf,WAAW,CAACgB,iBAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELT,QAAAA,WAAW,EAAE,EACX,GAAGS,KAAK,CAACT,WADE;AAEX,WAACU,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAFzD,SAFR;AAMLZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AAN3C,OAAP;;AAQF,SAAKf,WAAW,CAACiB,eAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELT,QAAAA,WAAW,EAAE;AACXI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADf;AAEXG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFf;AAGXF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHhB;AAIXC,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJd,SAFR;AAQLL,QAAAA,UAAU,EAAE,CARP;AASLC,QAAAA,KAAK,EAAE;AATF,OAAP;;AAWF,SAAKJ,WAAW,CAACkB,wBAAjB;AACE,aAAO,EACL,GAAGP,KADE;AAELP,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAIF;AACE,aAAOO,KAAP;AArCJ;AAuCD,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionsTypes\";\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n      };\n    case actionTypes.SET_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat,\n        },\n        totalPrice: 4,\n        error: false,\n      };\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return {\n        ...state,\n        error: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}