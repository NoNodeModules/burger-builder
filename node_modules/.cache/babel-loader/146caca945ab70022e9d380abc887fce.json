{"ast":null,"code":"import _defineProperty from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import{Redirect}from\"react-router-dom\";import Input from\"../../components/UI/Input/Input\";import Button from\"../../components/UI/Button/Button\";import Spinner from\"../../components/UI/Spinner/Spinner\";import classes from\"./Auth.module.css\";import*as actions from\"../../store/actions/index\";import{updateObject,checkValidity}from\"../../shared/utility\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Auth=/*#__PURE__*/function(_Component){_inherits(Auth,_Component);var _super=_createSuper(Auth);function Auth(){var _this;_classCallCheck(this,Auth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={controls:{email:{elementType:\"input\",elementConfig:{type:\"email\",placeholder:\"Mail Address\"},value:\"\",validation:{required:true,isEmail:true},valid:false,touched:false},password:{elementType:\"password\",elementConfig:{type:\"password\",placeholder:\"Password\"},value:\"\",validation:{required:true,minLength:6},valid:false,touched:false}},isSignup:true};_this.inputChangedHandler=function(event,controlName){var updatedControls=updateObject(_this.state.controls,_defineProperty({},controlName,updateObject(_this.state.controls[controlName],{value:event.target.value,valid:checkValidity(event.target.value,_this.state.controls[controlName].validation),touched:true})));_this.setState({controls:updatedControls});};_this.submitHandler=function(event){event.preventDefault();_this.props.onAuth(_this.state.controls.email.value,_this.state.controls.password.value,_this.state.isSignup);};_this.switchAuthModeHandler=function(){_this.setState(function(prevState){return{isSignup:!prevState.isSignup};});};return _this;}_createClass(Auth,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.props.buildingBurger&&this.props.authRedirectPath!==\"/\"){this.props.onSetAuthRedirectPath();}}},{key:\"render\",value:function render(){var _this2=this;var formElementsArray=[];for(var key in this.state.controls){formElementsArray.push({id:key,config:this.state.controls[key]});}var form=formElementsArray.map(function(formElement){return/*#__PURE__*/_jsx(Input,{elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);}},formElement.id);});if(this.props.loading){form=/*#__PURE__*/_jsx(Spinner,{});}var errorMessage=null;if(this.props.error){errorMessage=/*#__PURE__*/_jsx(\"p\",{children:this.props.error.message});}var authRedirect=null;if(this.props.isAuthenticated){authRedirect=/*#__PURE__*/_jsx(Redirect,{to:this.props.authRedirectPath});}return/*#__PURE__*/_jsxs(\"div\",{className:classes.Auth,children:[authRedirect,errorMessage,/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.submitHandler,children:[form,/*#__PURE__*/_jsx(Button,{btnType:\"Success\",children:\"SUBMIT\"}),/*#__PURE__*/_jsxs(Button,{clicked:this.switchAuthModeHandler,btnType:\"Danger\",children:[\"SWITCH TO \",this.state.isSignup?\"SIGNIN\":\"SIGNUP\"]})]})]});}}]);return Auth;}(Component);var mapStateToProps=function mapStateToProps(state){return{loading:state.auth.loading,error:state.auth.error,isAuthenticated:state.auth.token!==null,buildingBurger:state.burgerBuilder.building,authRedirectPath:state.auth.authRedirectPath};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(email,password,isSignup){return dispatch(actions.auth(email,password,isSignup));},onSetAuthRedirectPath:function onSetAuthRedirectPath(){return dispatch(actions.setAuthRedirectPath(\"/\"));}};};export default connect(mapStateToProps,mapDispatchToProps)(Auth);","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/containers/Auth/Auth.js"],"names":["React","Component","connect","Redirect","Input","Button","Spinner","classes","actions","updateObject","checkValidity","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","target","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","buildingBurger","authRedirectPath","onSetAuthRedirectPath","formElementsArray","key","push","id","config","form","map","formElement","loading","errorMessage","error","message","authRedirect","isAuthenticated","mapStateToProps","auth","token","burgerBuilder","building","mapDispatchToProps","dispatch","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport classes from \"./Auth.module.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { updateObject, checkValidity } from \"../../shared/utility\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Mail Address\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        elementType: \"password\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    isSignup: true,\r\n  };\r\n  componentDidMount() {\r\n    if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\r\n      this.props.onSetAuthRedirectPath();\r\n    }\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = updateObject(this.state.controls, {\r\n      [controlName]: updateObject(this.state.controls[controlName], {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.controls[controlName].validation\r\n        ),\r\n        touched: true,\r\n      }),\r\n    });\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.isSignup\r\n    );\r\n  };\r\n  switchAuthModeHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { isSignup: !prevState.isSignup };\r\n    });\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n\r\n    let form = formElementsArray.map((formElement) => (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        invalid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n      />\r\n    ));\r\n\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n\r\n    let errorMessage = null;\r\n\r\n    if (this.props.error) {\r\n      errorMessage = <p>{this.props.error.message}</p>;\r\n    }\r\n\r\n    let authRedirect = null;\r\n    if (this.props.isAuthenticated) {\r\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n    }\r\n    return (\r\n      <div className={classes.Auth}>\r\n        {authRedirect}\r\n        {errorMessage}\r\n        <form onSubmit={this.submitHandler}>\r\n          {form}\r\n          <Button btnType=\"Success\">SUBMIT</Button>\r\n          <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">\r\n            SWITCH TO {this.state.isSignup ? \"SIGNIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    buildingBurger: state.burgerBuilder.building,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password, isSignup) =>\r\n      dispatch(actions.auth(email, password, isSignup)),\r\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\")),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n"]},"metadata":{},"sourceType":"module"}