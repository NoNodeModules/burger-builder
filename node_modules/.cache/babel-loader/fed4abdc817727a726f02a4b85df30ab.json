{"ast":null,"code":"import _objectSpread from\"C:/Users/Natalia/Desktop/React course/burger-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from\"./actionsTypes\";import axios from\"../../axios-orders\";export var purchaseBurgerSuccess=function purchaseBurgerSuccess(id,orderData){return{type:actionTypes.PURCHASE_BURGER_SUCCESS,orderId:id,orderData:orderData};};export var purchaseBurgerFail=function purchaseBurgerFail(error){return{type:actionTypes.PURCHASE_BURGER_FAIL,error:error};};export var purchaseBurgerStart=function purchaseBurgerStart(){return{type:actionTypes.PURCHASE_BURGER_START};};export var purchaseBurger=function purchaseBurger(orderData,token){return function(dispatch){dispatch(purchaseBurgerStart());axios.post(\"/orders.json?auth=\"+token,orderData).then(function(response){dispatch(purchaseBurgerSuccess(response.data.name,orderData));}).catch(function(error){dispatch(purchaseBurgerFail(error));});};};export var purchaseInit=function purchaseInit(){return{type:actionTypes.PURCHASE_INIT};};export var fetchOrdersSuccess=function fetchOrdersSuccess(orders){return{type:actionTypes.FETCH_ORDERS_SUCCESS,orders:orders};};export var fetchOrdersFail=function fetchOrdersFail(error){return{type:actionTypes.FETCH_ORDERS_FAIL,error:error};};export var fetchOrdersStart=function fetchOrdersStart(){return{type:actionTypes.FETCH_ORDERS_START};};export var fetchOrders=function fetchOrders(token,userId){return function(dispatch){dispatch(fetchOrdersStart());var queryParams=\"?auth=\".concat(token,\"&orderBy=\\\"userId\\\"&equalTo=\\\"\").concat(userId,\"\\\"\");axios.get(\"/orders.json\".concat(queryParams)).then(function(res){var fetchedOrders=[];for(var key in res.data){fetchedOrders.push(_objectSpread(_objectSpread({},res.data[key]),{},{id:key}));}dispatch(fetchOrdersSuccess(fetchedOrders));}).catch(function(err){dispatch(fetchOrdersFail());});};};","map":{"version":3,"sources":["C:/Users/Natalia/Desktop/React course/burger-builder/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","post","then","response","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","userId","queryParams","get","res","fetchedOrders","key","push","err"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionsTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START,\r\n  };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(\"/orders.json?auth=\" + token, orderData)\r\n      .then((response) => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseBurgerFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    axios\r\n      .get(`/orders.json${queryParams}`)\r\n      .then((res) => {\r\n        const fetchedOrders = [];\r\n        for (let key in res.data) {\r\n          fetchedOrders.push({\r\n            ...res.data[key],\r\n            id: key,\r\n          });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchOrdersFail());\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}